workflow:
  id: packtpub-submission-workflow
  name: Prepare PacktPub Submission
  description: Package manuscript and code for PacktPub submission. Ensures SharePoint format requirements, learning objectives, hands-on project structure, and code repository meet PacktPub standards.
  type: publisher-submission
  version: 1.0
  project_types:
    - technical-book
  publisher: PacktPub
  sequence:
    - agent: manuscript-formatter
      executes: format-for-packtpub.md
      requires: manuscript-chapters[] (Markdown format)
      notes: "Convert Markdown manuscripts to PacktPub Word format with [PACKT] styles. Workflow: validate-manuscript.py (pre-check) → Pandoc conversion → apply-packt-styles-v6.py (with table caption and cell styling) → verify-packt-document.py (post-check). Generates formatted .docx with all 77 [PACKT] styles correctly applied. IMPORTANT: Table captions must appear BEFORE tables, figure captions AFTER images (see CAPTION-PLACEMENT-GUIDE.md). SAVE OUTPUT: formatted-chapters/ and validation reports"

    - agent: technical-editor
      validates: manuscript-format.md
      requires: formatted-chapters[] OR manuscript-chapters[]
      notes: "Verify manuscript meets PacktPub SharePoint format requirements using packtpub-submission-checklist. Check chapter structure (What You'll Learn, Prerequisites, sections, Summary, Q&A), [PACKT] style application, code block formatting, callout boxes, screenshot captions. SAVE OUTPUT: format-validation-report.md"

    - agent: code-curator
      validates: code-repository
      requires: chapter-code[]
      notes: "Validate all code examples are tested and working. Ensure repository structure follows PacktPub standards: chapter folders, README per chapter, working code for all examples, tests passing, version compatibility verified. Run code-testing-checklist. SAVE OUTPUT: code-validation-report.md"

    - agent: instructional-designer
      creates: learning-objectives-summary.md
      requires: manuscript-chapters[]
      notes: "PacktPub emphasizes learning outcomes. Extract learning objectives from all chapters, create summary document showing progression, validate against learning-objectives-checklist. Ensure objectives use action verbs and are measurable. SAVE OUTPUT: docs/learning-objectives-summary.md"

    - agent: book-publisher
      creates: sharepoint-package/
      requires: format-validation-passed, code-validation-passed
      notes: "Prepare submission package for SharePoint upload. Structure: /ChapterFiles/ (Word .docx or markdown), /CodeFiles/ (organized by chapter), /ImageFiles/ (high-res screenshots), author-questionnaire.md, learning-objectives-summary.md. Verify all files named per PacktPub conventions. SAVE OUTPUT: submission-package/packtpub-submission/"

    - agent: book-publisher
      validates: final-submission.md
      requires: sharepoint-package/
      notes: "Final validation before submission. Run complete packtpub-submission-checklist. Verify: all chapters present, code tested, images high-res, learning objectives clear, Q&A sections included, author questionnaire complete. Create submission checklist document. SAVE OUTPUT: docs/packtpub-submission-checklist-final.md with status"

  flow_diagram: |
    ```mermaid
    graph TD
        A[Start: Manuscript Ready] --> A1[manuscript-formatter: Format for PacktPub]
        A1 --> A2{Validation Pass?}
        A2 -->|No| A3[Fix Validation Issues]
        A3 --> A1
        A2 -->|Yes| B[technical-editor: Verify Format]
        B --> C{Format Valid?}
        C -->|No| D[Fix Format Issues]
        D --> B
        C -->|Yes| E[code-curator: Validate Code]
        E --> F{Code Tests Pass?}
        F -->|No| G[Fix Code Issues]
        G --> E
        F -->|Yes| H[instructional-designer: Create Learning Objectives Summary]
        H --> I[book-publisher: Prepare SharePoint Package]
        I --> J[book-publisher: Final Validation]
        J --> K{Ready?}
        K -->|No| L[Address Issues]
        L --> J
        K -->|Yes| M[Submit to PacktPub]

        style M fill:#90EE90
        style A1 fill:#E6E6FA
        style B fill:#FFE4B5
        style E fill:#FFE4B5
        style I fill:#ADD8E6
        style J fill:#F0E68C
    ```

  quality_gates:
    conversion_requirements:
      - Markdown → Word conversion with PacktPub template
      - All 77 [PACKT] styles correctly applied
      - Code blocks split: Code [PACKT] + Code End [PACKT] on last line
      - Lists properly styled: Bullet [PACKT] / Numbered Bullet [PACKT]
      - Headings use standard "Heading 1-6" (no [PACKT] suffix)
      - Pre-conversion validation passed (code ≤30 lines, images 300 DPI)
      - Post-conversion verification passed (style compliance)
      - Table captions BEFORE tables, figure captions AFTER images (CAPTION-PLACEMENT-GUIDE.md)
      - Table cells styled: Table Column Heading [PACKT] / Table Column Content [PACKT]
      - Scripts: validate-manuscript.py, apply-packt-styles-v6.py, verify-packt-document.py

    format_requirements:
      - SharePoint-compatible format (Word .docx with [PACKT] styles)
      - Chapter structure includes What You'll Learn section
      - Prerequisites clearly stated in each chapter
      - Summary and Q&A sections present
      - Code blocks properly formatted with language tags
      - Callout boxes for notes, warnings, tips
      - Screenshot captions descriptive (format: "Figure X.Y: Description" AFTER image)
      - Table captions descriptive (format: "Table X.Y: Description" BEFORE table)
      - Checklist: packtpub-submission-checklist.md

    code_requirements:
      - All code examples tested and working
      - Repository structure: chapter-XX/ folders
      - README.md in each chapter folder
      - Tests passing for all code
      - Version compatibility verified
      - No hardcoded credentials or secrets
      - Checklist: code-testing-checklist.md

    learning_requirements:
      - Learning objectives for each chapter
      - Objectives use action verbs
      - Measurable outcomes defined
      - Progression from simple to complex
      - Hands-on project focus
      - Checklist: learning-objectives-checklist.md

  handoff_prompts:
    editor_to_curator: "Format validation complete. {{chapter_count}} chapters meet PacktPub SharePoint requirements. All structural elements present (What You'll Learn, Prerequisites, Summary, Q&A). Code validation in progress."
    curator_to_designer: "Code validation complete. {{example_count}} code examples tested and passing. Repository structure meets PacktPub standards. Learning objectives extraction in progress."
    designer_to_publisher: "Learning objectives summary created. {{objective_count}} total objectives across {{chapter_count}} chapters. Clear learning progression demonstrated. Ready for submission package preparation."
    publisher_validation: "Submission package prepared. Structure: ChapterFiles ({{chapter_count}} chapters), CodeFiles ({{example_count}} examples), ImageFiles ({{image_count}} images). Running final validation checklist."
    ready_for_submission: "PacktPub submission package complete and validated. All quality gates passed. Package ready for SharePoint upload. Location: submission-package/packtpub-submission/"

  packtpub_specific_requirements:
    chapter_structure:
      - What You Will Learn section (bullet points)
      - Prerequisites section
      - Main content sections
      - Summary section (key takeaways)
      - Q&A section (5-10 questions)
      - Further reading (optional)

    formatting:
      - SharePoint-compatible format preferred
      - Code blocks with language identifiers
      - Callout boxes: Note, Tip, Warning, Important
      - Figure captions: "Figure X.Y: Description" (AFTER image)
      - Table captions: "Table X.Y: Description" (BEFORE table)
      - Numbered lists for procedures
      - Bold for UI elements, italic for emphasis

    code_repository:
      - GitHub repository required
      - Folder per chapter: chapter-01/, chapter-02/
      - README.md in each folder with setup instructions
      - requirements.txt or package.json for dependencies
      - All code tested and working
      - .gitignore for temporary files

    images:
      - High resolution (300 DPI minimum)
      - PNG or JPEG format
      - Clear, readable text in screenshots
      - Annotations for important areas
      - Filename convention: chapterXX-figureYY-description.png

  time_estimates:
    format_validation: "2-4 hours (depends on chapter count)"
    code_validation: "3-6 hours (depends on code complexity)"
    learning_objectives: "2-3 hours"
    package_preparation: "2-4 hours"
    final_validation: "1-2 hours"
    total_time: "10-19 hours"

  best_practices:
    - Start format validation early (don't wait until end)
    - Test all code in fresh environment before submission
    - Learning objectives should match chapter content exactly
    - Use PacktPub style guide for formatting consistency
    - Keep code examples practical and hands-on
    - Screenshot quality matters - retake blurry images
    - Q&A questions should test chapter learning objectives
    - Maintain consistent terminology across all chapters
    - Verify all external links work
    - Double-check author questionnaire accuracy

  common_pitfalls:
    - Missing "What You Will Learn" section (required by PacktPub)
    - Code examples not tested (failures during review)
    - Low-resolution screenshots (unusable in print)
    - Inconsistent chapter structure
    - Missing Q&A sections
    - Code repository not organized by chapter
    - Hardcoded credentials in code examples
    - Vague learning objectives (not measurable)
    - Missing prerequisites in chapters
    - Incomplete author questionnaire
    - Table captions placed AFTER tables instead of BEFORE (CRITICAL - see CAPTION-PLACEMENT-GUIDE.md)
    - Figure captions placed BEFORE images instead of AFTER
